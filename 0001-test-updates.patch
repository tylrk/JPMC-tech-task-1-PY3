From d82ccb93509bfa2d41b20749cbbd1f39f5c92788 Mon Sep 17 00:00:00 2001
From: tylrk <tylerk1117@gmail.com>
Date: Tue, 30 Aug 2022 19:06:31 -0500
Subject: [PATCH] test updates

---
 client_test.py | 17 ++++++++++++++++-
 1 file changed, 16 insertions(+), 1 deletion(-)

diff --git a/client_test.py b/client_test.py
index af2bf26..6d9eb49 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,5 +1,5 @@
 import unittest
-from client3 import getDataPoint
+from client3 import getDataPoint, getRatio
 
 class ClientTest(unittest.TestCase):
   def test_getDataPoint_calculatePrice(self):
@@ -8,6 +8,8 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote),(quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price'])/2))
 
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
@@ -15,10 +17,23 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote),(quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price'])/2))
 
 
   """ ------------ Add more unit tests ------------ """
+  def test_getRatio_calculateRatio(self):
+    prices = {'ABC': 155.25, 'DEF': 130.75}
 
+    self.assertEqual(getRatio(prices['ABC'], prices['DEF'], prices['ABC']/prices['DEF']))
+
+  def test_getRatio_calculateAZero(self):
+    prices = {'ABC': 0, 'DEF': 125.50}
+    self.assertEqual(getRatio(prices['ABC'], prices['DEF']), 0)
+
+  def test_getRatio_calculateBZero(self):
+    prices = {'ABC': 125.50, 'DEF': 0}
+    self.assertEqual(getRatio(prices['ABC'], prices['DEF']), None)
 
 
 if __name__ == '__main__':
-- 
2.36.0

